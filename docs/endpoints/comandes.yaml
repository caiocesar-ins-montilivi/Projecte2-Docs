openapi: "3.1.0"
info:
  version: 1.0.0
  title: Endpoints de plats
servers:
  - url: https://culinaryjetapp.daw.institutmontilivi.cat/api
  - url: http://culinaryjetapp.daw.institutmontilivi.cat/api
paths:
  /llistarcomandes:
    get:
      summary: Aquest endpoint retorna una llista de comandes registrades per un usuari específic. És necessari un JWT ( Json Web Token ) vàlid per identificar l'usuari.
      operationId: LlistarComandes
      tags:
        - GET Comandes
      responses:
        200:
          description: Resposta esperada a una petició vàlida.
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          body:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comandes"
        default:
          description: Error no esperat.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /comanda/crear:
    post:
      summary: Aquest endpoint crea una comanda per a un usuari específic segons els paràmetres entrats. És necessari un JWT ( Json Web Token ) vàlid per identificar l'usuari.
      operationId: CrearComanda
      tags:
        - POST Comandes
      parameters:
        - name: dataHoraInici
          in: query
          required: true
          description: Data hora inici de la comanda.
          schema:
            type: string
        - name: dataHoraEntrega
          in: query
          required: true
          description: Data hora entrega aproximada de la comanda.
          schema:
            type: string
        - name: preu
          in: query
          required: true
          description: El preu de la comanda en.
          schema:
            type: int
            base: int64
            minimum: 1
        - name: idEntrant
          in: query
          required: true
          description: ID Únic del plat entrant.
          schema:
            type: integer
            base: int64
            minimum: 1
        - name: idPrincipal
          in: query
          required: true
          description: ID Únic del plat principal.
          schema:
            type: integer
            base: int64
            minimum: 1
        - name: idPostres
          in: query
          required: true
          description: ID Únic del plat de postre.
          schema:
            type: integer
            base: int64
            minimum: 1
        - name: gluten
          in: query
          required: false
          description: Conté gluten.
          schema:
            type: boolean
            example: false
        - name: lactosa
          in: query
          required: false
          description: Conté lactosa.
          schema:
            type: boolean
            example: false
      responses:
        200:
          description: Resposta esperada a una petició vàlida.
        default:
          description: Error no esperat.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /comanda/cancelar:
    post:
      summary: Cancel·la una comanda especificant el seu id.
      operationId: CancelarComanda
      tags:
        - POST Comandes
      parameters:
        - name: id
          in: query
          required: true
          description: ID únic de la comanda a cancel·lar.
          schema:
            type: integer
            base: int64
            minimum: 1
      responses:
        200:
          description: Resposta esperada a una petició vàlida.
        default:
          description: Error no esperat.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  # 1) Define the security scheme type (HTTP bearer)
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT # optional, arbitrary value for documentation purposes
  securityDefinitions:
    # X-API-Key: abcdef12345
    APIKeyHeader:
      type: apiKey
      in: header
      name: X-API-Key
    # /path?api_key=abcdef12345
    APIKeyQueryParam:
      type: apiKey
      in: query
      name: api_key
  # 2) Apply the security globally to all operations
  security:
    - bearerAuth: [] # use the same name as above
    - APIKeyHeader: []
  schemas:
    Comanda:
      required:
        - id
        - nom
      properties:
        id:
          type: integer
          format: int64
        data_hora_inici:
          type: string
        data_hora_entrega:
          type: string
        preu:
          type: string
        entrant:
          $ref: "#/components/schemas/Plat" # Utilitza directament la referència
        principal:
          $ref: "#/components/schemas/Plat" # Utilitza directament la referència
        postre:
          $ref: "#/components/schemas/Plat" # Utilitza directament la referència
    Comandes:
      type: array
      items:
        $ref: "#/components/schemas/Comanda"
    Plat:
      properties:
        id:
          type: integer
          format: int64
        nom:
          type: string
        suplement:
          type: integer
        gluten:
          type: boolean
        lactosa:
          type: boolean
        imatge:
          type: string
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
